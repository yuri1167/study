##sorted,sortedは非破壊的
l = ['Python', 'Ruby', 'PHP', 'JavaScript']
#第二引数にkey=len,max,minを書くことで条件の指定
sorted_l = sorted(l, key=len)
print(sorted_l) #['PHP', 'Ruby', 'Python', 'JavaScript']


##isinstance,型の判定
lists = [1,'3',4,'5',6,'7']
#第一引数に対象、第二引数に型
newL = [l for l in lists if isinstance(l,int)]
print(newL)
#これでもできる
lists = [1,'3',4,'5',6,'7']
newL = [l for l in lists if type(l)==int]
print(newL)

##set(),第一引数をset型に変換
list1 = [1,2,4]
#setは重複する値を持たない為、長さを計るlen()と併用し、重複する値があるか調べられる
print('値は重複していません') if len(list1)==len(set(list1)) else print('値が重複しています')

##any(),all(),いずれか、もしくはすべての要素がTrueか判定
print(all([True, True, True]))# True
print(any([True, False, False]))# True
#以下実践
l = [1, 2, 3, '4', 5]
if any([v for v in l if isinstance(v, str)]):
    print('文字列が入っています。')
else:
    print('文字列は入っていません。')

#enumurate関数,リスト、タプルなどのイテラブルobjからインデックス番号を取得できる
l = ['Alice', 'Bob', 'Charlie']
#入れる変数は、番号、要素の順番
for i, name in enumerate(l):
    print(i, name)
# 0 Alice
# 1 Bob
# 2 Charlie
